<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.baihy.springcloud</groupId>
    <artifactId>microservice-cloud</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <!--maven工程聚合子模块-->
        <module>microservice-api</module>
        <module>microservice-consumer-9000</module>
        <module>microservice-eureka-server-7001</module>
        <module>microservice-eureka-server-7002</module>
        <module>microservice-eureka-server-7003</module>
        <module>microservice-provider-8001</module>
        <module>microservice-provider-8002</module>
        <module>microservice-provider-8003</module>
        <module>microservice-consumer-feign-9001</module>
        <module>microservice-provider-hystrix-8004</module>
        <module>microservice-hystrix-dashboard-8080</module>
    </modules>
    <packaging>pom</packaging>
    <!--在父工程中，重点就是packaging标签，是pom类型的-->

    <!--定义maven的properties标签-->
    <properties>
        <!--集中式管理jar包的版本-->
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <lombok.version>1.18.6</lombok.version>
        <spring.cloud.version>Dalston.SR1</spring.cloud.version>
        <spring.boot.version>1.5.9.RELEASE</spring.boot.version>
        <mysql.version>5.1.47</mysql.version>
        <druid.version>1.1.14</druid.version>
        <mybatis-spring-boot.version>1.3.0</mybatis-spring-boot.version>
        <project.version>1.0-SNAPSHOT</project.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!--添加测试依赖-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!--添加spring cloud的依赖-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--添加spring boot的依赖-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring boot的starter-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jetty</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-test</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!--引入mysql的驱动包-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!--引入数据库连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--引入lombok的jar包-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!--配置bulid信息-->
    <build>
        <!--指定父工程项目的名字-->
        <finalName>microservice-cloud</finalName>
        <resources>
            <resource><!--这个配置的含义是:现在访问所有子模块中的src/main/resources路径下的资源-->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin><!--这个插件就是负责解读，在src/main/resources下面以$开头和结尾信息，就能够读取。-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimit>@</delimit><!--注意，这里如果用$是不起作用的-->
                    </delimiters>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>